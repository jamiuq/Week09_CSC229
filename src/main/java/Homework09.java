import java.lang.Math;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author MoaathAlrajab
 */
public class Homework09 {
    
    // ToDo 01:  Write an algorithm to solve the following problem
    /*
    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over one hundred divisors?


    FORMULA = n(n + 1)/2
    
    */
    public static void main(String[] args)
    {
       int n = 2;
       while (true)
       {
           int local_triangle = (n * ( n + 1 ))/2;
           int num_divisors = 2;
           // find divisors of local_triangle
           for (int i = 2; i <= n/2; i++)
           {
               if (local_triangle % i == 0) num_divisors += 2;
           }
           if (num_divisors > 100) break;
           n++;
       }
       System.out.println(n + " is the first triangle number to have over one hundred divisors.");
    }
}
